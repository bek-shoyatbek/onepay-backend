generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Restaurant {
  id               String   @id @default(uuid())
  name             String
  image            String
  adminTelegramIds String[] // Postgres supports arrays natively

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations (optional)
  waiters Waiter[]
  admins  Admin[]
  tips    TipTransaction[]
}

model Transaction {
  id        String            @id @default(uuid())
  orderId   String
  userId    String
  spotId    String?
  status    TransactionStatus @default(INIT)
  provider  String
  terminal  String
  amount    Float
  tip       Float
  isTipOnly Boolean

  tableId     String?
  transId     String?
  prepareId   Int?
  performTime DateTime?
  cancelTime  DateTime?
  state       Int?
  reason      Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Waiter {
  id           String  @id @default(uuid())
  restaurantId String
  waiterId     String
  phone        String?
  telegramId   String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relation to restaurant
  restaurant Restaurant       @relation(fields: [restaurantId], references: [id])
  // Relation to tip transactions
  tips       TipTransaction[]

  @@index([restaurantId])
}

model Admin {
  id           String  @id @default(uuid())
  restaurantId String
  adminId      String
  phone        String?
  telegramId   String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relation to restaurant
  restaurant Restaurant @relation(fields: [restaurantId], references: [id])

  @@index([restaurantId])
}

model TipTransaction {
  id           String @id @default(uuid())
  amount       Float
  restaurantId String
  waiterId     String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  restaurant Restaurant @relation(fields: [restaurantId], references: [id])
  waiter     Waiter     @relation(fields: [waiterId], references: [id])

  @@index([restaurantId])
  @@index([waiterId])
}

enum TransactionStatus {
  INIT
  PENDING
  PAID
  CANCELED
}
